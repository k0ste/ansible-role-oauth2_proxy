---
- name: "oauth2_proxy | Assert that system manager is systemd"
  ansible.builtin.assert:
    that:
      - "hostvars[inventory_hostname]['ansible_service_mgr'] == 'systemd'"
    fail_msg: "System manager is not systemd"
    quiet: "true"
- name: "oauth2_proxy | Add the OS specific variables"
  ansible.builtin.include_vars:
    file: "{{ hostvars[inventory_hostname]['ansible_os_family'] + '.yml' }}"
- name: "oauth2_proxy | Set facts about oauth2_proxy role"
  ansible.builtin.set_fact:
    oauth2p_settings: "{{ hostvars[inventory_hostname]['oauth2_proxy'] |
      community.general.json_query('[].settings[]') }}"
    oauth2p_package_state: "{{ hostvars[inventory_hostname]['oauth2_proxy'] |
      community.general.json_query('[].package_state | [0]') }}"
- name: "oauth2_proxy | Assert that oauth2_proxy package state in valid value"
  ansible.builtin.assert:
    that:
      - "vars['oauth2p_package_state'] in ['present', 'latest']"
    fail_msg: "'package_state' must be in 'present' or 'latest'"
    quiet: "true"
  when:
    - "vars['oauth2p_package_state'] is defined"
    - "vars['oauth2p_package_state'] != ''"
    - "vars['oauth2p_package_state'] != []"
- name: "oauth2_proxy | Set oauth2_proxy package state to present state from
    empty state"
  ansible.builtin.set_fact:
    oauth2p_package_state: 'present'
  when:
    - "vars['oauth2p_package_state'] is defined"
    - "vars['oauth2p_package_state'] == ''"
- name: "oauth2_proxy | Create catalogs"
  ansible.builtin.file:
    path: "{{ hostvars[inventory_hostname]['oauth2_proxy_dest'] }}"
    state: "directory"
    owner: "root"
    group: "root"
    mode: "0755"
  when:
    - "vars['oauth2p_settings'] is defined"
    - "vars['oauth2p_settings'] != ''"
    - "vars['oauth2p_settings'] != []"
